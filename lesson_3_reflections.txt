When would you want to use a remote repository rather than keeping all your work local?

  When working on a collaborated project, code can be hosted in a github public repo, to which others can contribute.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	We would like to have some control over the contents in our repository. Thats what git is all about.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

	fork - cloning within github repos.
	clone - copying files and file history ( basically the whole repo ) from github to local machine, or within github repos.
	branches - different path for our program to grow into, so in a later stage, a merging can be done ( Handled in the same repo).

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	When working on a new feature, without breaking existing code. We would like to have a production ready code all the time, in the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

	Having a copy of the last known state of the remote stored locally is beneficial in the sense that, we can understand whether a change is made later or was it present from very beginning.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	By taking a copy of actual project and working on different files and later merge it, but it would waste much time and space. Also, we wont be able to actually switch between versions, with ease.